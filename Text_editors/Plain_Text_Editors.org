#+TITLE: Text editors / IDEs

* Introduction

A plain text editor is for a bioinformatician like a saw for a
carpenter - it is an essential tool that is basically constantly
used. We need them to write software, configuration files,
documentation and much more. Due to this you should choose wisely
which editor(s) you use and try to make youself familiar with the
often used functionalities. Ideally use one editor for all you text
related task as any improvement of your skill in this editor will
automatically improve the processing of all these tasks.

* List of editors

- [[https://en.wikipedia.org/wiki/List_of_text_editors][List of text editors on Wikipedia]]

A selection:
- [[http://atom.io/][Atom]]
- [[https://www.gnu.org/software/emacs/][Emacs]]
- [[https://kate-editor.org/][Kate]]
- [[https://www.jetbrains.com/pycharm/][PyCharm]]
- [[https://www.spyder-ide.org/][Spyder]]
- [[https://wiki.gnome.org/Apps/Gedit][gedit]]
- [[https://www.geany.org/][Geany]]
- [[https://www.vim.org/][vim]]

* Features/Extension

  The following features might be helpful and should be provided by a
  text editor besides it basic functions:
  
  - Syntax highlighting / linting
  - Autocompletion
  - Remote file editing

* Further references for selected editors
** Emacs
*** Basics
- [[https://www.gnu.org/software/emacs/][Emacs]]
- [[https://www.gnu.org/software/emacs/tour/][Tour through emacs]] 
- [[http://sachachua.com/blog/2013/05/how-to-learn-emacs-a-hand-drawn-one-pager-for-beginners/][How to Learn Emacs: A Hand-drawn One-pager for Beginners / A visual tutorial]] (including helpful poster)
- [[https://www.gnu.org/software/emacs/refcards/pdf/survival.pdf][GNU Emacs Survival Card]]
- [[http://www.jesshamrick.com/2012/09/10/absolute-beginners-guide-to-emacs/][Absolute Beginner's Guide to Emacs]] 
- Use a [[https://www.emacswiki.org/emacs/StarterKits][starter kit]] so get a better default behavior. 
- Use Emacs in [[https://www.emacswiki.org/emacs/EmacsClient][client mode]] to decrease starting time and make buffers
  accessible between different instances.
- [[http://ergoemacs.org/emacs/emacs_package_system.html][How to Install Packages Using ELPA, MELPA]]
- [[https://emacs.stackexchange.com][Emacs Stack Exchange Q&A]]
- [[https://blog.insightdatascience.com/emacs-for-data-science-af814b78eb41][Emacs for Data Science]]
- Run the Emacs tutorial: ~C-h t~
- [[https://cestlaz.github.io/stories/emacs/][Using Emacs Series]]
- [[https://emacsthemes.com/][Emacs Themes]]
- https://pawelbx.github.io/emacs-theme-gallery/
- [[https://magit.vc/][Git integration for Emacs]]
- Use C-h m to describe a mode and it's keys
- https://projectile.readthedocs.io/en/latest/
- [[http://www.wilfred.me.uk/blog/2018/01/06/the-emacs-guru-guide-to-key-bindings/][The Emacs Guru Guide to Key Bindings]]
- [[https://github.com/emacs-tw/awesome-emacs/blob/master/README.org][Awesome Emacs link collection]]
- [[http://google-ebook.com/blog/2016/01/13/pdf-tools-in-emacs/][Emacs as a pdf reader an annotator with pdf-tools]]
- [[https://www.emacswiki.org/emacs/LaTeXPreviewPane][LaTeX Preview Pane]]
- [[https://huytd.github.io/emacs-from-scratch.html][Emacs from scratch]]
*** Useful extensions
- org-mode
  - Video: [[https://www.youtube.com/watch?v=bzZ09dAbLEE][Taking Notes In Emacs Org-Mode]]
  - [[https://www.youtube.com/watch?v=oJTwQvgfgMM][Video "Emacs Org-mode - a system for note-taking and project planning" from the GoogleTechTalks series ]]
  - [[https://www.inkandben.com/org-mode-resources][Emacs and Org-mode resources]]
  - Video: [[https://www.youtube.com/watch?v=1-dUkyn_fZA][Emacs + org-mode + python in reproducible research]]
- [[https://elpy.readthedocs.io][elpy - Emacs Python Development Environment]] 
  - run ~M-x elpy-config~ and install pacakges
  - should automatically suggest completion - if not t can be force by ~M-Tab~
  - Video [[https://www.youtube.com/watch?v=0kuCeS-mfyc][Emacs as a Python editor and IDE (Part 1)]] and [[https://www.youtube.com/watch?v=mflvdXKyA_g][Emacs as a Python Editor and IDE (Part 2)]]
- [[https://jblevins.org/projects/deft/][Deft is an Emacs mode for quickly browsing, filtering, and editing directories of plain text notes]]
- [[https://github.com/jaypei/emacs-neotree][neotree]]
- [[https://magit.vc/][Magit]] - A Git Porcelain inside Emacs
- [[https://github.com/vermiculus/magithub/][Magithub]]
- helm
- [[https://github.com/nashamri/academic-phrases][Academic-phrases]]
- [[http://www.lysator.liu.se/~tab/artist/][Artist Mode]]
- [[https://jblevins.org/projects/deft/][Deft is an Emacs mode for quickly browsing, filtering, and editing directories of plain text notes]]
- [[https://www.emacswiki.org/emacs/AbbrevMode][Abbrev Mode]]
- [[https://joaotavora.github.io/yasnippet/][YASnippet]]
- [[https://jblevins.org/projects/markdown-mode/][Markdown Mode]]
*** Recommendations for the init.el
- [[https://www.emacswiki.org/emacs/StarterKits][StarterKits]]

Example for an =init.el= file that should be stored in =~/emacs.d/init.el=.

#+BEGIN_SRC 
; === Misc ===
;; Added by Package.el.  This must come before configurations of
;; installed packages. Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.  (package-initialize)
(setq inhibit-startup-message t)

; highlight marked area
(setq transient-mark-mode t)

; display column number in mode line
(setq column-number-mode 1)

; display line number in mode line
(setq line-number-mode 1)

; Word completion with C-c C-g
(global-set-key [ (control c) (control g) ] 'dabbrev-expand)

; Auto-Completion
(require 'auto-complete)
(global-auto-complete-mode t)

;=== helm ====

(require 'helm)
(require 'helm-config)

(global-set-key (kbd "C-x b") 'helm-buffers-list)
(global-set-key (kbd "M-x") 'helm-M-x)
(global-set-key (kbd "M-y") 'helm-show-kill-ring)

(helm-mode 1)

; === Package source ===

(add-to-list 'package-archives
             '("marmalade" . "http://marmalade-repo.org/packages/"))
(add-to-list 'package-archives
             '("melpa" . "http://melpa.org/packages/"))

; === YAsnippet ====

(yas-global-mode 1)

; === org-babel ===

(org-babel-do-load-languages
 'org-babel-load-languages
 '((emacs-lisp . t)
   (R . t)
   (sh . t)
   (emacs-lisp . t)   
   (python . t)))

(setq org-babel-python-command "python3")

(setq org-confirm-babel-evaluate nil)

(setq org-src-fontify-natively t)

; Elpy
(setq elpy-rpc-python-command "/opt/anaconda3/bin/python3")
(setq python-shell-interpreter "/opt/anaconda3/bin/python3")
(set-face-background 'highlight-indentation-face "#E3E3D3")
(set-face-background 'highlight-indentation-current-column-face "#E3E3D3")
(elpy-enable)

; === magit ===

(global-set-key (kbd "C-x g") 'magit-status)

; === git-gutter ===
; Set marker for changes in comparison to previous commit
(global-git-gutter-mode +1)

#+END_SRC

*** Emacs as Python IDE
   
- [[https://realpython.com/emacs-the-best-python-editor/][Emacs â€“ The Best Python Editor?]]
- [[https://elpy.readthedocs.io][elpy]]
  - some useful keybindings:
    - ~M-.~ => go to definition (e.g. of function under the cursor)
    - ~C-c C-d~ => get documentation
    - ~C-c C-t~ => run test runner (set testrunner with ~M-x elpy-set-test-runner~)
- Debugging with [[https://github.com/realgud/realgud][realgud]] + [[https://docs.python.org/3/library/pdb.html][pdb]] or (better) [[http:https://github.com/gotcha/ipdb][ipdb]]
** vi/vim/neovim

- [[https://neovim.io/][neovim]]
- [[https://github.com/davidhalter/jedi-vim][jedi-vim - awesome Python autocompletion with VIM]]
- [[https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/][VIM and Python - a Match Made in Heaven]]

- [[https://medium.com/@peterxjang/how-to-learn-vim-a-four-week-plan-cd8b376a9b85][How To Learn Vim: A Four Week Plan]]
- [[http://vimsheet.com/][Vim Cheat Sheet]]

- Video: [[https://www.youtube.com/watch?v=5r6yzFEXajQ][vim + tmux - OMG!Code]]
- Video: [[https://www.youtube.com/watch?v=67OZNp9Z0CQ][VIM Python-mode]]

- https://github.com/mhinz/vim-signify
- https://github.com/nvie/vim-flake8 (syntax and style checker for python source code)
- https://github.com/vim-syntastic/syntastic (syntax check report)
- https://github.com/Valloric/YouCompleteMe (code completion engine for vim)
- https://github.com/jistr/vim-nerdtree-tabs (NERDTree implementation in vim)
** Atom

- http://atom.io/

*** Recommended extension
- [[https://atom.io/packages/minimap][minimap]]
- [[https://atom.io/packages/autocomplete-python][autocomplete-python]]
- [[https://atom.io/packages/python-indent][python-indent]]
- [[https://atom.io/packages/linter][linter]]
- [[https://atom.io/packages/linter-flake8][linter-flake8]]
